name: "Deploy to Azure using Terraform"

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Get Credentials Outputs
        run: |
          echo "CONTAINER_REGISTRY=$(terraform output -raw acr_login_server)"
          echo "REGISTRY_UN=$(terraform output -raw acr_admin_username)"
          echo "REGISTRY_PW=$(terraform output -raw acr_admin_password)"

      # Capture ACR login server, username, and password from Terraform output
      # - name: Capture Terraform Outputs
      #   id: acr_outputs
      #   run: |
      #     echo "ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)" >> $GITHUB_ENV
      #     echo "ACR_USERNAME=$(terraform output -raw acr_admin_username)" >> $GITHUB_ENV
      #     echo "ACR_PASSWORD=$(terraform output -raw acr_admin_password)" >> $GITHUB_ENV
      # Use environment variables from Terraform output to log in to ACR
      - name: Log in to ACR
        run: az acr login --name LibraryMicroservice

        # On push to "main", build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
