name: "Build and Deploy to Azure"

on:
  workflow_dispatch:

env:
  CONTAINER_REGISTRY: ${{ env.ACR_LOGIN_SERVER }}
  VERSION: ${{ github.sha }}
  REGISTRY_PW: ${{env.REGISTRY_PW}}
  REGISTRY_UN: ${{env.REGISTRY_UN}}

permissions:
  contents: read

jobs:
  build-and-push:
    name: "Deploy"
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Build Docker Image
      #   run: ./scripts/build-image.sh
      # - name: Push Docker Image to ACR
      #   run: ./scripts/push-image.sh
      # - name: Azure CLI script
      #   uses: azure/cli@v2
      #   with:
      #     azcliversion: latest
      #     inlineScript: |
      #       az account show
      - name: Log in to ACR
        run: az acr login --name LibraryMicroservice

      - name: Display Registry
        run: echo "${{env.ACR_LOGIN_SERVER}}"

        # On push to "main", build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
